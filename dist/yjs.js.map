{"version":3,"file":"yjs.js","sources":["../src/utils/DeleteSet.js","../src/utils/EventHandler.js","../src/utils/ID.js","../src/utils/isParentOf.js","../src/utils/RelativePosition.js","../src/utils/Snapshot.js","../src/utils/StructStore.js","../src/utils/Transaction.js","../src/utils/UndoManager.js","../src/utils/Doc.js","../src/utils/YEvent.js","../src/types/AbstractType.js","../src/types/YArray.js","../src/types/YMap.js","../src/types/YText.js","../src/types/YXmlFragment.js","../src/types/YXmlElement.js","../src/types/YXmlEvent.js","../src/types/YXmlHook.js","../src/types/YXmlText.js","../src/structs/AbstractStruct.js","../src/structs/GC.js","../src/structs/ContentBinary.js","../src/structs/ContentDeleted.js","../src/structs/ContentEmbed.js","../src/structs/ContentFormat.js","../src/structs/ContentJSON.js","../src/structs/ContentString.js","../src/structs/ContentType.js","../src/structs/Item.js","../src/utils/encoding.js"],"sourcesContent":["\nimport {\n  findIndexSS,\n  createID,\n  getState,\n  splitItem,\n  iterateStructs,\n  Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math.js'\nimport * as map from 'lib0/map.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     * @private\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, store, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len === right.clock) {\n        left.len += right.len\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = (ds1, ds2) => {\n  const merged = new DeleteSet()\n  // Write all keys from ds1 to merged. If ds2 has the same key, combine the sets.\n  ds1.clients.forEach((dels1, client) =>\n    merged.clients.set(client, dels1.concat(ds2.clients.get(client) || []))\n  )\n  // Write all missing keys from ds2 to merged.\n  ds2.clients.forEach((dels2, client) => {\n    if (!merged.clients.has(client)) {\n      merged.clients.set(client, dels2)\n    }\n  })\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, id, length) => {\n  map.setIfUndefined(ds.clients, id.client, () => []).push(new DeleteItem(id.clock, length))\n}\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = new DeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.id.clock === clock + len && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder, ds.clients.size)\n  ds.clients.forEach((dsitems, client) => {\n    encoding.writeVarUint(encoder, client)\n    const len = dsitems.length\n    encoding.writeVarUint(encoder, len)\n    for (let i = 0; i < len; i++) {\n      const item = dsitems[i]\n      encoding.writeVarUint(encoder, item.clock)\n      encoding.writeVarUint(encoder, item.len)\n    }\n  })\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const readDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder)\n  for (let i = 0; i < numClients; i++) {\n    const client = decoding.readVarUint(decoder)\n    const numberOfDeletes = decoding.readVarUint(decoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoding.readVarUint(decoder)\n      const len = decoding.readVarUint(decoder)\n      if (clock < state) {\n        if (state < clock + len) {\n          addToDeleteSet(unappliedDS, createID(client, state), clock + len - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clock + len) {\n            if (!struct.deleted) {\n              if (clock + len < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clock + len - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, createID(client, clock), len)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const unappliedDSEncoder = encoding.createEncoder()\n    writeDeleteSet(unappliedDSEncoder, unappliedDS)\n    store.pendingDeleteReaders.push(decoding.createDecoder(encoding.toUint8Array(unappliedDSEncoder)))\n  }\n}\n","import * as f from 'lib0/function.js'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  eventHandler.l = eventHandler.l.filter(g => f !== g)\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n","\nimport { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as error from 'lib0/error.js'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (let [key, value] of type.doc.share) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n","\nimport { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = child.parent._item\n  }\n  return false\n}\n","\nimport {\n  createID,\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  ContentType,\n  followRedone,\n  ID, Doc, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   */\n  constructor (type, tname, item) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n  }\n}\n\n/**\n * @param {Object} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock))\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   */\n  constructor (type, index) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index) => new AbsolutePosition(type, index)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n *\n * @function\n */\nexport const createRelativePosition = (type, item) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = type._item.id\n  }\n  return new RelativePosition(typeid, tname, item)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index) => {\n  let t = type._start\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index))\n      }\n      index -= t.length\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition|null}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  return new RelativePosition(type, tname, itemID)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition|null}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID)\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = right.parent\n    if (type._item !== null && !type._item.deleted) {\n      index = right.deleted || !right.countable ? 0 : res.diff\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID)\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    index = type._length\n  }\n  return createAbsolutePosition(type, index)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type)\n)\n","\nimport {\n  isDeleted,\n  DeleteSet, Item // eslint-disable-line\n} from '../internals.js'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sm state map\n   */\n  constructor (ds, sm) {\n    /**\n     * @type {DeleteSet}\n     * @private\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     * @private\n     */\n    this.sm = sm\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined ? !item.deleted : (\n  snapshot.sm.has(item.id.client) && (snapshot.sm.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n)\n","\nimport {\n  GC,\n  splitItem,\n  GCRef, ItemRef, Transaction, ID, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math.js'\nimport * as error from 'lib0/error.js'\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     * @private\n     */\n    this.clients = new Map()\n    /**\n     * Store incompleted struct reads here\n     * `i` denotes to the next read operation\n     * We could shift the array of refs instead, but shift is incredible\n     * slow in Chrome for arrays with more than 100k elements\n     * @see tryResumePendingStructRefs\n     * @type {Map<number,{i:number,refs:Array<GCRef|ItemRef>}>}\n     * @private\n     */\n    this.pendingClientsStructRefs = new Map()\n    /**\n     * Stack of pending structs waiting for struct dependencies\n     * Maximum length of stack is structReaders.size\n     * @type {Array<GCRef|ItemRef>}\n     * @private\n     */\n    this.pendingStack = []\n    /**\n     * @type {Array<decoding.Decoder>}\n     * @private\n     */\n    this.pendingDeleteReaders = []\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<any>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = structs[midindex]\n    const midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\n// @ts-ignore\nexport const getItem = (store, id) => find(store, id)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  let struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, store, id) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(id.client))\n  return /** @type {Item} */ (structs[findIndexCleanStart(transaction, structs, id.clock)])\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n","\nimport {\n  getState,\n  createID,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  ID, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as map from 'lib0/map.js'\nimport * as math from 'lib0/math.js'\nimport * as set from 'lib0/set.js'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   */\n  constructor (doc, origin) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item._parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent>,Array<YEvent>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Set<ID>}\n     * @private\n     */\n    this._mergeStructs = new Set()\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n  }\n}\n\n/**\n * @param {Transaction} transaction\n */\nexport const computeUpdateMessageFromTransaction = transaction => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return null\n  }\n  const encoder = encoding.createEncoder()\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return encoder\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin]\n *\n * @private\n * @function\n */\nexport const transact = (doc, f, origin = null) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin)\n    transactionCleanups.push(doc._transaction)\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    f(doc._transaction)\n  } finally {\n    if (initialCall && transactionCleanups[0] === doc._transaction) {\n      // The first transaction ended, now process observer calls.\n      // Observer call may create new transactions for which we need to call the observers and do cleanup.\n      // We don't want to nest these calls, so we execute these calls one after another\n      for (let i = 0; i < transactionCleanups.length; i++) {\n        const transaction = transactionCleanups[i]\n        const store = transaction.doc.store\n        const ds = transaction.deleteSet\n        sortAndMergeDeleteSet(ds)\n        transaction.afterState = getStateVector(transaction.doc.store)\n        doc._transaction = null\n        doc.emit('beforeObserverCalls', [transaction, doc])\n        // emit change events on changed types\n        transaction.changed.forEach((subs, itemtype) => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n        transaction.changedParentTypes.forEach((events, type) => {\n          // We need to think about the possibility that the user transforms the\n          // Y.Doc in the event.\n          if (type._item === null || !type._item.deleted) {\n            events = events\n              .filter(event =>\n                event.target._item === null || !event.target._item.deleted\n              )\n            events\n              .forEach(event => {\n                event.currentTarget = type\n              })\n            // We don't need to check for events.length\n            // because we know it has at least one element\n            callEventHandlerListeners(type._dEH, events, transaction)\n          }\n        })\n        doc.emit('afterTransaction', [transaction, doc])\n        /**\n         * @param {Array<AbstractStruct>} structs\n         * @param {number} pos\n         */\n        const tryToMergeWithLeft = (structs, pos) => {\n          const left = structs[pos - 1]\n          const right = structs[pos]\n          if (left.deleted === right.deleted && left.constructor === right.constructor) {\n            if (left.mergeWith(right)) {\n              structs.splice(pos, 1)\n              if (right instanceof Item && right.parentSub !== null && right.parent._map.get(right.parentSub) === right) {\n                right.parent._map.set(right.parentSub, /** @type {Item} */ (left))\n              }\n            }\n          }\n        }\n        // Replace deleted items with ItemDeleted / GC.\n        // This is where content is actually remove from the Yjs Doc.\n        if (doc.gc) {\n          for (const [client, deleteItems] of ds.clients) {\n            const structs = /** @type {Array<AbstractStruct>} */ (store.clients.get(client))\n            for (let di = deleteItems.length - 1; di >= 0; di--) {\n              const deleteItem = deleteItems[di]\n              const endDeleteItemClock = deleteItem.clock + deleteItem.len\n              for (\n                let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n                si < structs.length && struct.id.clock < endDeleteItemClock;\n                struct = structs[++si]\n              ) {\n                const struct = structs[si]\n                if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n                  break\n                }\n                if (struct instanceof Item && struct.deleted && !struct.keep) {\n                  struct.gc(store, false)\n                }\n              }\n            }\n          }\n        }\n        // try to merge deleted / gc'd items\n        // merge from right to left for better efficiecy and so we don't miss any merge targets\n        for (const [client, deleteItems] of ds.clients) {\n          const structs = /** @type {Array<AbstractStruct>} */ (store.clients.get(client))\n          for (let di = deleteItems.length - 1; di >= 0; di--) {\n            const deleteItem = deleteItems[di]\n            // start with merging the item next to the last deleted item\n            const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n            for (\n              let si = mostRightIndexToCheck, struct = structs[si];\n              si > 0 && struct.id.clock >= deleteItem.clock;\n              struct = structs[--si]\n            ) {\n              tryToMergeWithLeft(structs, si)\n            }\n          }\n        }\n\n        // on all affected store.clients props, try to merge\n        for (const [client, clock] of transaction.afterState) {\n          const beforeClock = transaction.beforeState.get(client) || 0\n          if (beforeClock !== clock) {\n            const structs = /** @type {Array<AbstractStruct>} */ (store.clients.get(client))\n            // we iterate from right to left so we can safely remove entries\n            const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n            for (let i = structs.length - 1; i >= firstChangePos; i--) {\n              tryToMergeWithLeft(structs, i)\n            }\n          }\n        }\n        // try to merge mergeStructs\n        // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n        //        but at the moment DS does not handle duplicates\n        for (const mid of transaction._mergeStructs) {\n          const client = mid.client\n          const clock = mid.clock\n          const structs = /** @type {Array<AbstractStruct>} */ (store.clients.get(client))\n          const replacedStructPos = findIndexSS(structs, clock)\n          if (replacedStructPos + 1 < structs.length) {\n            tryToMergeWithLeft(structs, replacedStructPos + 1)\n          }\n          if (replacedStructPos > 0) {\n            tryToMergeWithLeft(structs, replacedStructPos)\n          }\n        }\n        // @todo Merge all the transactions into one and provide send the data as a single update message\n        doc.emit('afterTransactionCleanup', [transaction, doc])\n        if (doc._observers.has('update')) {\n          const updateMessage = computeUpdateMessageFromTransaction(transaction)\n          if (updateMessage !== null) {\n            doc.emit('update', [encoding.toUint8Array(updateMessage), transaction.origin, doc])\n          }\n        }\n      }\n      doc._transactionCleanups = []\n    }\n  }\n}\n","import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  redoItem,\n  iterateStructs,\n  isParentOf,\n  createID,\n  followRedone,\n  getItemCleanStart,\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time.js'\nimport { Observable } from 'lib0/observable.js'\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} ds\n   * @param {number} start clock start of the local client\n   * @param {number} len\n   */\n  constructor (ds, start, len) {\n    this.ds = ds\n    this.start = start\n    this.len = len\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      const itemsToRedo = new Set()\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.ds, store, struct => {\n        if (struct instanceof Item && scope.some(type => isParentOf(type, struct))) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(item => {\n        performedChange = redoItem(transaction, item, itemsToRedo) !== null || performedChange\n      })\n      const structs = /** @type {Array<GC|Item>} */ (store.clients.get(doc.clientID))\n      iterateStructs(transaction, structs, stackItem.start, stackItem.len, struct => {\n        if (struct instanceof Item && !struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, store, createID(item.id.client, item.id.clock + diff))\n            }\n            if (item.length > stackItem.len) {\n              getItemCleanStart(transaction, store, createID(item.id.client, item.id.clock + stackItem.len))\n            }\n            struct = item\n          }\n          keepItem(struct)\n          struct.delete(transaction)\n          performedChange = true\n        }\n      })\n      result = stackItem\n      if (result != null) {\n        undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType }, undoManager])\n      }\n    }\n  }, undoManager)\n  return result\n}\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.metadata` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.metadata`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'>}\n */\nexport class UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {Set<any>} [trackedTransactionOrigins=new Set([null])]\n   * @param {object} [options={captureTimeout=500}]\n   */\n  constructor (typeScope, trackedTransactionOrigins = new Set([null]), { captureTimeout = 500 } = {}) {\n    super()\n    this.scope = typeScope instanceof Array ? typeScope : [typeScope]\n    trackedTransactionOrigins.add(this)\n    this.trackedTransactionOrigins = trackedTransactionOrigins\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    this.doc = /** @type {Doc} */ (this.scope[0].doc)\n    this.lastChange = 0\n    this.skipping = false\n\n    this.doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      if(this.skipping) {\n        return\n      }\n      // Only track certain transactions\n      if (!this.scope.some(type => transaction.changedParentTypes.has(type)) || (!this.trackedTransactionOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedTransactionOrigins.has(transaction.origin.constructor)))) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.redoStack = []\n      }\n      const beforeState = transaction.beforeState.get(this.doc.clientID) || 0\n      const afterState = transaction.afterState.get(this.doc.clientID) || 0\n      const now = time.getUnixTime()\n      if (now - this.lastChange < captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.ds = mergeDeleteSets(lastOp.ds, transaction.deleteSet)\n        lastOp.len = afterState - lastOp.start\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, beforeState, afterState - beforeState))\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, transaction.doc.store, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item)\n        }\n      })\n      this.emit('stack-item-added', [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo' }, this])\n    })\n  }\n\n  startSkipping() {\n    this.skipping = true\n  }\n\n  stopSkipping() {\n    this.skipping = false\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n}\n","/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlFragment,\n  transact,\n  Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { Observable } from 'lib0/observable.js'\nimport * as random from 'lib0/random.js'\nimport * as map from 'lib0/map.js'\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nexport class Doc extends Observable {\n  /**\n   * @param {Object|undefined} conf configuration\n   */\n  constructor (conf = {}) {\n    super()\n    this.gc = conf.gc || true\n    this.clientID = random.uint32()\n    /**\n     * @type {Map<string, AbstractType<YEvent>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     * @private\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     * @private\n     */\n    this._transactionCleanups = []\n  }\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    transact(this, f, origin)\n  }\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n  /**\n   * @template T\n   * @param {string} name\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name) {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n  /**\n   * @param {string} name\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name) {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n  /**\n   * @param {string} name\n   * @return {YMap<any>}\n   *\n   * @public\n   */\n  getMap (name) {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n  /**\n   * @param {string} name\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name) {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   *\n   * @protected\n   */\n  destroy () {\n    this.emit('destroyed', [true])\n    super.destroy()\n  }\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f)\n  }\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f)\n  }\n}\n","\nimport {\n  isDeleted,\n  AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\n/**\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {AbstractType<any>} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {AbstractType<any>}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = child._item.parent._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = child._item.parent\n  }\n  return path\n}\n","\nimport {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  nextID,\n  isVisible,\n  ContentType,\n  ContentJSON,\n  ContentBinary,\n  createID,\n  getItemCleanStart,\n  Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map.js'\nimport * as iterator from 'lib0/iterator.js'\nimport * as error from 'lib0/error.js'\nimport * as encoding from 'lib0/encoding.js' // eslint-disable-line\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n * @private\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  callEventHandlerListeners(type._eH, event, transaction)\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = type._item.parent\n  }\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @private\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @private\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @private\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   * @private\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   * @private\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   * @private\n   */\n  _write (encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   *\n   * @private\n   */\n  _callObserver (transaction, parentSubs) { /* skip if no type is specified */ }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {Object | Array | number | string}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  for (let n = type._start; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array|number>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentJSON(jsonContent))\n      left.integrate(transaction)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    switch (c.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        jsonContent.push(c)\n        break\n      default:\n        packJsonContent()\n        switch (c.constructor) {\n          case Uint8Array:\n          case ArrayBuffer:\n            left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n            left.integrate(transaction)\n            break\n          default:\n            if (c instanceof AbstractType) {\n              left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentType(c))\n              left.integrate(transaction)\n            } else {\n              throw new Error('Unexpected content type in insert operation')\n            }\n        }\n    }\n  })\n  packJsonContent()\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index === 0) {\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  let n = parent._start\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, transaction.doc.store, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  let n = parent._start\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, transaction.doc.store, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, transaction.doc.store, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw error.create('array length exceeded')\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  let content\n  if (value == null) {\n    content = new ContentJSON([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentJSON([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(value)\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(nextID(transaction), left, left === null ? null : left.lastId, null, null, parent, key, content).integrate(transaction)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  let res = {}\n  for (const [key, value] of parent._map) {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  }\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sm.has(v.id.client) || v.id.clock >= (snapshot.sm.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n","/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\nimport * as encoding from 'lib0/encoding.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n */\nexport class YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction)\n    this._transaction = transaction\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {IterableIterator<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n  }\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   *\n   * @private\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YArray()\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   *\n   * @private\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      /** @type {Array} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template T,M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   * @private\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YArrayRefID)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n *\n * @private\n * @function\n */\nexport const readYArray = decoder => new YArray()\n","\n/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\nimport * as iterator from 'lib0/iterator.js'\n\n/**\n * @template T\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template T number|string|Object|Array|Uint8Array\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<T>>\n * @implements {IterableIterator}\n */\nexport class YMap extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = new Map()\n  }\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   *\n   * @private\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    for (let [key, value] of /** @type {Map<string, any>} */ (this._prelimContent)) {\n      this.set(key, value)\n    }\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   *\n   * @private\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,T>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {}\n    for (let [key, item] of this._map) {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    }\n    return map\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on overy key-value pair.\n   *\n   * @param {function(T,string,YMap<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {}\n    for (let [key, item] of this._map) {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    }\n    return map\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {T} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, value)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {T|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   *\n   * @private\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YMapRefID)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n *\n * @private\n * @function\n */\nexport const readYMap = decoder => new YMap()\n","\n/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  nextID,\n  createID,\n  getItemCleanStart,\n  isVisible,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  ContentFormat,\n  ContentString,\n  Doc, Item, Snapshot, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\nimport * as encoding from 'lib0/encoding.js'\n\nexport class ItemListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\nexport class ItemTextListPosition extends ItemListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, currentAttributes) {\n    super(left, right)\n    this.currentAttributes = currentAttributes\n  }\n}\n\nexport class ItemInsertionResult extends ItemListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {Map<string,any>} negatedAttributes\n   */\n  constructor (left, right, negatedAttributes) {\n    super(left, right)\n    this.negatedAttributes = negatedAttributes\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<string,any>} currentAttributes\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {number} count\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, store, currentAttributes, left, right, count) => {\n  while (right !== null && count > 0) {\n    switch (right.content.constructor) {\n      case ContentEmbed:\n      case ContentString:\n        if (!right.deleted) {\n          if (count < right.length) {\n            // split right\n            getItemCleanStart(transaction, store, createID(right.id.client, right.id.clock + count))\n          }\n          count -= right.length\n        }\n        break\n      case ContentFormat:\n        if (!right.deleted) {\n          updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (right.content))\n        }\n        break\n    }\n    left = right\n    right = right.right\n  }\n  return new ItemTextListPosition(left, right, currentAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, store, parent, index) => {\n  let currentAttributes = new Map()\n  let left = null\n  let right = parent._start\n  return findNextPosition(transaction, store, currentAttributes, left, right, index)\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} negatedAttributes\n * @return {ItemListPosition}\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, left, right, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    right !== null && (\n      right.deleted === true || (\n        right.content.constructor === ContentFormat &&\n        (negatedAttributes.get(/** @type {ContentFormat} */ (right.content).key) === /** @type {ContentFormat} */ (right.content).value)\n      )\n    )\n  ) {\n    if (!right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (right.content).key)\n    }\n    left = right\n    right = right.right\n  }\n  for (let [key, val] of negatedAttributes) {\n    left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentFormat(key, val))\n    left.integrate(transaction)\n  }\n  return { left, right }\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} currentAttributes\n * @param {Object<string,any>} attributes\n * @return {ItemListPosition}\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (left, right, currentAttributes, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (right === null) {\n      break\n    } else if (right.deleted) {\n      // continue\n    } else if (right.content.constructor === ContentFormat && (attributes[(/** @type {ContentFormat} */ (right.content)).key] || null) === /** @type {ContentFormat} */ (right.content).value) {\n      // found a format, update currentAttributes and continue\n      updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (right.content))\n    } else {\n      break\n    }\n    left = right\n    right = right.right\n  }\n  return new ItemListPosition(left, right)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} currentAttributes\n * @param {Object<string,any>} attributes\n * @return {ItemInsertionResult}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, left, right, currentAttributes, attributes) => {\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (let key in attributes) {\n    const val = attributes[key]\n    const currentVal = currentAttributes.get(key) || null\n    if (currentVal !== val) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentFormat(key, val))\n      left.integrate(transaction)\n    }\n  }\n  return new ItemInsertionResult(left, right, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} currentAttributes\n * @param {string|object} text\n * @param {Object<string,any>} attributes\n * @return {ItemListPosition}\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, left, right, currentAttributes, text, attributes) => {\n  for (let [key] of currentAttributes) {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  }\n  const minPos = minimizeAttributeChanges(left, right, currentAttributes, attributes)\n  const insertPos = insertAttributes(transaction, parent, minPos.left, minPos.right, currentAttributes, attributes)\n  left = insertPos.left\n  right = insertPos.right\n  // insert content\n  const content = text.constructor === String ? new ContentString(text) : new ContentEmbed(text)\n  left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, content)\n  left.integrate(transaction)\n  return insertNegatedAttributes(transaction, parent, left, insertPos.right, insertPos.negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} currentAttributes\n * @param {number} length\n * @param {Object<string,any>} attributes\n * @return {ItemListPosition}\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, left, right, currentAttributes, length, attributes) => {\n  const minPos = minimizeAttributeChanges(left, right, currentAttributes, attributes)\n  const insertPos = insertAttributes(transaction, parent, minPos.left, minPos.right, currentAttributes, attributes)\n  const negatedAttributes = insertPos.negatedAttributes\n  left = insertPos.left\n  right = insertPos.right\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  while (length > 0 && right !== null) {\n    if (right.deleted === false) {\n      switch (right.content.constructor) {\n        case ContentFormat:\n          const { key, value } = /** @type {ContentFormat} */ (right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (attr === value) {\n              negatedAttributes.delete(key)\n            } else {\n              negatedAttributes.set(key, value)\n            }\n            right.delete(transaction)\n          }\n          updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (right.content))\n          break\n        case ContentEmbed:\n        case ContentString:\n          if (length < right.length) {\n            getItemCleanStart(transaction, transaction.doc.store, createID(right.id.client, right.id.clock + length))\n          }\n          length -= right.length\n          break\n      }\n    }\n    left = right\n    right = right.right\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    left = new Item(nextID(transaction), left, left === null ? null : left.lastId, right, right === null ? null : right.id, parent, null, new ContentString(newlines))\n    left.integrate(transaction)\n  }\n  return insertNegatedAttributes(transaction, parent, left, right, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item|null} left\n * @param {Item|null} right\n * @param {Map<string,any>} currentAttributes\n * @param {number} length\n * @return {ItemListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, left, right, currentAttributes, length) => {\n  while (length > 0 && right !== null) {\n    if (right.deleted === false) {\n      switch (right.content.constructor) {\n        case ContentFormat:\n          updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (right.content))\n          break\n        case ContentEmbed:\n        case ContentString:\n          if (length < right.length) {\n            getItemCleanStart(transaction, transaction.doc.store, createID(right.id.client, right.id.clock + length))\n          }\n          length -= right.length\n          right.delete(transaction)\n          break\n      }\n    }\n    left = right\n    right = right.right\n  }\n  return { left, right }\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @typedef {Object} DeltaItem\n * @property {number|undefined} DeltaItem.delete\n * @property {number|undefined} DeltaItem.retain\n * @property {string|undefined} DeltaItem.string\n * @property {Object<string,any>} DeltaItem.attributes\n */\n\n/**\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   */\n  constructor (ytext, transaction) {\n    super(ytext, transaction)\n    /**\n     * @private\n     * @type {Array<DeltaItem>|null}\n     */\n    this._delta = null\n  }\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<DeltaItem>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      this._delta = []\n      transact(y, transaction => {\n        const delta = /** @type {Array<DeltaItem>} */ (this._delta)\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        let attributes = {} // counts added or removed new attributes for retain\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen }\n                deleteLen = 0\n                break\n              case 'insert':\n                op = { insert }\n                if (currentAttributes.size > 0) {\n                  op.attributes = {}\n                  for (let [key, value] of currentAttributes) {\n                    if (value !== null) {\n                      op.attributes[key] = value\n                    }\n                  }\n                }\n                insert = ''\n                break\n              case 'retain':\n                op = { retain }\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {}\n                  for (let key in attributes) {\n                    op.attributes[key] = attributes[key]\n                  }\n                }\n                retain = 0\n                break\n            }\n            delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = /** @type {ContentEmbed} */ (item.content).embed\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat:\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null\n                  if (curVal !== value) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === (oldAttributes.get(key) || null)) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) || null\n                if (curVal !== value) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (attr !== value) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      attributes[key] = value\n                    } else {\n                      delete attributes[key]\n                    }\n                  } else {\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          let lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n    }\n    return this._delta\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     * @private\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n  }\n\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   *\n   * @private\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   *\n   * @private\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YTextEvent(this, transaction))\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   *\n   * @public\n   */\n  applyDelta (delta) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        /**\n         * @type {ItemListPosition}\n         */\n        let pos = new ItemListPosition(null, this._start)\n        const currentAttributes = new Map()\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (typeof op.insert === 'string' && i === delta.length - 1 && pos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              pos = insertText(transaction, this, pos.left, pos.right, currentAttributes, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            pos = formatText(transaction, this, pos.left, pos.right, currentAttributes, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            pos = deleteText(transaction, pos.left, pos.right, currentAttributes, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        for (let [key, value] of currentAttributes) {\n          addAttributes = true\n          attributes[key] = value\n        }\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    while (n !== null) {\n      if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n        switch (n.content.constructor) {\n          case ContentString:\n            const cur = currentAttributes.get('ychange')\n            if (snapshot !== undefined && !isVisible(n, snapshot)) {\n              if (cur === undefined || cur.user !== n.id.client || cur.state !== 'removed') {\n                packStr()\n                currentAttributes.set('ychange', { user: n.id.client, state: 'removed' })\n              }\n            } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n              if (cur === undefined || cur.user !== n.id.client || cur.state !== 'added') {\n                packStr()\n                currentAttributes.set('ychange', { user: n.id.client, state: 'added' })\n              }\n            } else if (cur !== undefined) {\n              packStr()\n              currentAttributes.delete('ychange')\n            }\n            str += /** @type {ContentString} */ (n.content).str\n            break\n          case ContentEmbed:\n            packStr()\n            ops.push({\n              insert: /** @type {ContentEmbed} */ (n.content).embed\n            })\n            break\n          case ContentFormat:\n            packStr()\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n            break\n        }\n      }\n      n = n.right\n    }\n    packStr()\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} attributes Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes = {}) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const { left, right, currentAttributes } = findPosition(transaction, y.store, this, index)\n        insertText(transaction, this, left, right, currentAttributes, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    if (embed.constructor !== Object) {\n      throw new Error('Embed must be an Object')\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const { left, right, currentAttributes } = findPosition(transaction, y.store, this, index)\n        insertText(transaction, this, left, right, currentAttributes, embed, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const { left, right, currentAttributes } = findPosition(transaction, y.store, this, index)\n        deleteText(transaction, left, right, currentAttributes, length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        let { left, right, currentAttributes } = findPosition(transaction, y.store, this, index)\n        if (right === null) {\n          return\n        }\n        formatText(transaction, this, left, right, currentAttributes, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   *\n   * @private\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YTextRefID)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = decoder => new YText()\n","/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  Doc, ContentType, Transaction, Item, YXmlText, YXmlHook, Snapshot // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {IterableIterator}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = /** @type {ContentType} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {ContentType} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = n.parent._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     * @private\n     */\n    this._prelimContent = []\n  }\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   * @private\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   * @private\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @private\n   * @param {encoding.Encoder} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = decoder => new YXmlFragment()\n","\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeListForEach,\n  YXmlElementRefID,\n  Snapshot, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     * @private\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   * @private\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   * @private\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (let key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    let attrs = this.getAttributes()\n    for (let key in attrs) {\n      dom.setAttribute(key, attrs[key])\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @private\n   * @param {encoding.Encoder} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YXmlElementRefID)\n    encoding.writeVarString(encoder, this.nodeName)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {YXmlElement}\n *\n * @private\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoding.readVarString(decoder))\n","\nimport {\n  YEvent,\n  YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string|null>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n","\nimport {\n  YMap,\n  YXmlHookRefID\n} from '../internals.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @private\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {encoding.Encoder} encoder The encoder to write data to.\n   *\n   * @private\n   */\n  _write (encoder) {\n    super._write(encoder)\n    encoding.writeVarUint(encoder, YXmlHookRefID)\n    encoding.writeVarString(encoder, this.hookName)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoding.readVarString(decoder))\n","\nimport { YText, YXmlTextRefID } from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js' // eslint-disable-line\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  _copy () {\n    return new YXmlText()\n  }\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (let nodeName in delta.attributes) {\n        const attrs = []\n        for (let key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[i]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   *\n   * @private\n   */\n  _write (encoder) {\n    encoding.writeVarUint(encoder, YXmlTextRefID)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n","\nimport {\n  StructStore, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js' // eslint-disable-line\nimport * as error from 'lib0/error.js'\n\n/**\n * @private\n */\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    /**\n     * The uniqe identifier of this struct.\n     * @type {ID}\n     * @readonly\n     */\n    this.id = id\n    this.length = length\n    this.deleted = false\n  }\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n  /**\n   * @param {encoding.Encoder} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   * @private\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {Transaction} transaction\n   */\n  integrate (transaction) {\n    throw error.methodUnimplemented()\n  }\n}\n\n/**\n * @private\n */\nexport class AbstractStructRef {\n  /**\n   * @param {ID} id\n   */\n  constructor (id) {\n    /**\n     * @type {Array<ID>}\n     */\n    this._missing = []\n    /**\n     * The uniqe identifier of this type.\n     * @type {ID}\n     */\n    this.id = id\n  }\n  /**\n   * @param {Transaction} transaction\n   * @return {Array<ID|null>}\n   */\n  getMissing (transaction) {\n    return this._missing\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @param {number} offset\n   * @return {AbstractStruct}\n   */\n  toStruct (transaction, store, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStructRef,\n  AbstractStruct,\n  createID,\n  addStruct,\n  StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding.js'\nimport * as encoding from 'lib0/encoding.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    super(id, length)\n    this.deleted = true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  integrate (transaction) {\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeUint8(encoder, structGCRefNumber)\n    encoding.writeVarUint(encoder, this.length - offset)\n  }\n}\n\n/**\n * @private\n */\nexport class GCRef extends AbstractStructRef {\n  /**\n   * @param {decoding.Decoder} decoder\n   * @param {ID} id\n   * @param {number} info\n   */\n  constructor (decoder, id, info) {\n    super(id)\n    /**\n     * @type {number}\n     */\n    this.length = decoding.readVarUint(decoder)\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @param {number} offset\n   * @return {GC}\n   */\n  toStruct (transaction, store, offset) {\n    if (offset > 0) {\n      // @ts-ignore\n      this.id = createID(this.id.client, this.id.clock + offset)\n      this.length -= offset\n    }\n    return new GC(\n      this.id,\n      this.length\n    )\n  }\n}\n","import {\n  StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as buffer from 'lib0/buffer.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * @private\n */\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeVarUint8Array(encoder, this.content)\n  }\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(buffer.copyUint8Array(decoding.readVarUint8Array(decoder)))\n","\nimport {\n  addToDeleteSet,\n  StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\n/**\n * @private\n */\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id, this.len)\n    item.deleted = true\n  }\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeVarUint(encoder, this.len - offset)\n  }\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoding.readVarUint(decoder))\n","\nimport {\n  StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeVarString(encoder, JSON.stringify(this.embed))\n  }\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(JSON.parse(decoding.readVarString(decoder)))\n","\nimport {\n  Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeVarString(encoder, this.key)\n    encoding.writeVarString(encoder, JSON.stringify(this.value))\n  }\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoding.readVarString(decoder), JSON.parse(decoding.readVarString(decoder)))\n","import {\n  Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoding.writeVarUint(encoder, len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoding.writeVarString(encoder, c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoding.readVarUint(decoder)\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoding.readVarString(decoder)\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n","import {\n  Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n    return right\n  }\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoding.writeVarString(encoder, offset === 0 ? this.str : this.str.slice(offset))\n  }\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoding.readVarString(decoder))\n","\nimport {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js' // eslint-disable-line\nimport * as decoding from 'lib0/decoding.js'\nimport * as error from 'lib0/error.js'\n\n/**\n * @type {Array<function(decoding.Decoder):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<YEvent>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // Whis will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.add(item.id)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // same as above\n        transaction._mergeStructs.add(item.id)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {decoding.Decoder} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoding.readVarUint(decoder)](decoder))\n","\nimport {\n  readID,\n  createID,\n  writeID,\n  GC,\n  nextID,\n  AbstractStructRef,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentString,\n  readContentEmbed,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error.js'\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as maplib from 'lib0/map.js'\nimport * as set from 'lib0/set.js'\nimport * as binary from 'lib0/binary.js'\n\n/**\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n */\nexport const keepItem = item => {\n  while (item !== null && !item.keep) {\n    item.keep = true\n    item = item.parent._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  const id = leftItem.id\n  // create rightItem\n  const rightItem = new Item(\n    createID(id.client, id.clock + diff),\n    leftItem,\n    createID(id.client, id.clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.deleted = true\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.add(rightItem.id)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    rightItem.parent._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems) => {\n  if (item.redone !== null) {\n    return getItemCleanStart(transaction, transaction.doc.store, item.redone)\n  }\n  let parentItem = item.parent._item\n  /**\n   * @type {Item|null}\n   */\n  let left\n  /**\n   * @type {Item|null}\n   */\n  let right\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n  } else {\n    // Is a map item. Insert as current value\n    left = item\n    while (left.right !== null) {\n      left = left.right\n      if (left.id.client !== transaction.doc.clientID) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    }\n    if (left.right !== null) {\n      left = /** @type {Item} */ (item.parent._map.get(item.parentSub))\n    }\n    right = null\n  }\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true && parentItem.redone === null) {\n    // try to undo parent if it will be undone anyway\n    if (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems) === null) {\n      return null\n    }\n  }\n  if (parentItem !== null && parentItem.redone !== null) {\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, transaction.doc.store, parentItem.redone)\n    }\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && leftTrace.parent._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, transaction.doc.store, leftTrace.redone)\n      }\n      if (leftTrace !== null && leftTrace.parent._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && rightTrace.parent._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, transaction.doc.store, rightTrace.redone)\n      }\n      if (rightTrace !== null && rightTrace.parent._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  }\n  const redoneItem = new Item(\n    nextID(transaction),\n    left, left === null ? null : left.lastId,\n    right, right === null ? null : right.id,\n    parentItem === null ? item.parent : /** @type {ContentType} */ (parentItem.content).type,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = redoneItem.id\n  keepItem(redoneItem)\n  redoneItem.integrate(transaction)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>} parent\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     * @readonly\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @readonly\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * The parent type.\n     * @type {AbstractType<any>}\n     * @readonly\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     * @readonly\n     */\n    this.parentSub = parentSub\n    /**\n     * Whether this item was deleted or not.\n     * @type {Boolean}\n     */\n    this.deleted = false\n    /**\n     * If this type's effect is reundone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    this.length = content.getLength()\n    this.countable = content.isCountable()\n    /**\n     * If true, do not garbage collect this Item.\n     */\n    this.keep = false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @private\n   */\n  integrate (transaction) {\n    const store = transaction.doc.store\n    const id = this.id\n    const parent = this.parent\n    const parentSub = this.parentSub\n    const length = this.length\n    /**\n     * @type {Item|null}\n     */\n    let o\n    // set o to the first conflicting item\n    if (this.left !== null) {\n      o = this.left.right\n    } else if (parentSub !== null) {\n      o = parent._map.get(parentSub) || null\n      while (o !== null && o.left !== null) {\n        o = o.left\n      }\n    } else {\n      o = parent._start\n    }\n    // TODO: use something like DeleteSet here (a tree implementation would be best)\n    /**\n     * @type {Set<Item>}\n     */\n    const conflictingItems = new Set()\n    /**\n     * @type {Set<Item>}\n     */\n    const itemsBeforeOrigin = new Set()\n    // Let c in conflictingItems, b in itemsBeforeOrigin\n    // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n    // Note that conflictingItems is a subset of itemsBeforeOrigin\n    while (o !== null && o !== this.right) {\n      itemsBeforeOrigin.add(o)\n      conflictingItems.add(o)\n      if (compareIDs(this.origin, o.origin)) {\n        // case 1\n        if (o.id.client < id.client) {\n          this.left = o\n          conflictingItems.clear()\n        }\n      } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(store, o.origin))) {\n        // case 2\n        if (o.origin === null || !conflictingItems.has(getItem(store, o.origin))) {\n          this.left = o\n          conflictingItems.clear()\n        }\n      } else {\n        break\n      }\n      o = o.right\n    }\n    // reconnect left/right + update parent map/start if necessary\n    if (this.left !== null) {\n      const right = this.left.right\n      this.right = right\n      this.left.right = this\n    } else {\n      let r\n      if (parentSub !== null) {\n        r = parent._map.get(parentSub) || null\n        while (r !== null && r.left !== null) {\n          r = r.left\n        }\n      } else {\n        r = parent._start\n        parent._start = this\n      }\n      this.right = r\n    }\n    if (this.right !== null) {\n      this.right.left = this\n    } else if (parentSub !== null) {\n      // set as current parent value if right === null and this is parentSub\n      parent._map.set(parentSub, this)\n      if (this.left !== null) {\n        // this is the current attribute value of parent. delete right\n        this.left.delete(transaction)\n      }\n    }\n    // adjust length of parent\n    if (parentSub === null && this.countable && !this.deleted) {\n      parent._length += length\n    }\n    addStruct(store, this)\n    this.content.integrate(transaction, this)\n    // add parent to transaction.changed\n    addChangedTypeToTransaction(transaction, parent, parentSub)\n    if ((parent._item !== null && parent._item.deleted) || (this.right !== null && parentSub !== null)) {\n      // delete if parent is deleted or if this is not the current attribute value of parent\n      this.delete(transaction)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   * @private\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   * @private\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    return createID(this.id.client, this.id.clock + this.length - 1)\n  }\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = this.parent\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.deleted = true\n      addToDeleteSet(transaction.deleteSet, this.id, this.length)\n      maplib.setIfUndefined(transaction.changed, parent, set.create).add(this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   *\n   * @private\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {encoding.Encoder} encoder The encoder to write data to.\n   * @param {number} offset\n   *\n   * @private\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoding.writeUint8(encoder, info)\n    if (origin !== null) {\n      writeID(encoder, origin)\n    }\n    if (rightOrigin !== null) {\n      writeID(encoder, rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = this.parent\n      if (parent._item === null) {\n        // parent type on y._map\n        // find the correct key\n        const ykey = findRootTypeKey(parent)\n        encoding.writeVarUint(encoder, 1) // write parentYKey\n        encoding.writeVarString(encoder, ykey)\n      } else {\n        encoding.writeVarUint(encoder, 0) // write parent id\n        writeID(encoder, parent._item.id)\n      }\n      if (parentSub !== null) {\n        encoding.writeVarString(encoder, parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @param {number} info\n */\nconst readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(decoding.Decoder):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { throw error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted,\n  readContentJSON,\n  readContentBinary,\n  readContentString,\n  readContentEmbed,\n  readContentFormat,\n  readContentType\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {number} offset\n   * @return {AbstractContent}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {AbstractContent} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @param {encoding.Encoder} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    throw error.methodUnimplemented()\n  }\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n\n/**\n * @private\n */\nexport class ItemRef extends AbstractStructRef {\n  /**\n   * @param {decoding.Decoder} decoder\n   * @param {ID} id\n   * @param {number} info\n   */\n  constructor (decoder, id, info) {\n    super(id)\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.left = (info & binary.BIT8) === binary.BIT8 ? readID(decoder) : null\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.right = (info & binary.BIT7) === binary.BIT7 ? readID(decoder) : null\n    const canCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n    const hasParentYKey = canCopyParentInfo ? decoding.readVarUint(decoder) === 1 : false\n    /**\n     * If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n     * and we read the next string as parentYKey.\n     * It indicates how we store/retrieve parent from `y.share`\n     * @type {string|null}\n     */\n    this.parentYKey = canCopyParentInfo && hasParentYKey ? decoding.readVarString(decoder) : null\n    /**\n     * The parent type.\n     * @type {ID | null}\n     */\n    this.parent = canCopyParentInfo && !hasParentYKey ? readID(decoder) : null\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = canCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoding.readVarString(decoder) : null\n    const missing = this._missing\n    if (this.left !== null) {\n      missing.push(this.left)\n    }\n    if (this.right !== null) {\n      missing.push(this.right)\n    }\n    if (this.parent !== null) {\n      missing.push(this.parent)\n    }\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = readItemContent(decoder, info)\n    this.length = this.content.getLength()\n  }\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @param {number} offset\n   * @return {Item|GC}\n   */\n  toStruct (transaction, store, offset) {\n    if (offset > 0) {\n      /**\n       * @type {ID}\n       */\n      const id = this.id\n      this.id = createID(id.client, id.clock + offset)\n      this.left = createID(this.id.client, this.id.clock - 1)\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    const left = this.left === null ? null : getItemCleanEnd(transaction, store, this.left)\n    const right = this.right === null ? null : getItemCleanStart(transaction, store, this.right)\n    let parent = null\n    let parentSub = this.parentSub\n    if (this.parent !== null) {\n      const parentItem = getItem(store, this.parent)\n      // Edge case: toStruct is called with an offset > 0. In this case left is defined.\n      // Depending in which order structs arrive, left may be GC'd and the parent not\n      // deleted. This is why we check if left is GC'd. Strictly we don't have\n      // to check if right is GC'd, but we will in case we run into future issues\n      if (!parentItem.deleted && (left === null || left.constructor !== GC) && (right === null || right.constructor !== GC)) {\n        parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    } else if (this.parentYKey !== null) {\n      parent = transaction.doc.get(this.parentYKey)\n    } else if (left !== null) {\n      if (left.constructor !== GC) {\n        parent = left.parent\n        parentSub = left.parentSub\n      }\n    } else if (right !== null) {\n      if (right.constructor !== GC) {\n        parent = right.parent\n        parentSub = right.parentSub\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n\n    return parent === null\n      ? new GC(this.id, this.length)\n      : new Item(\n        this.id,\n        left,\n        this.left,\n        right,\n        this.right,\n        parent,\n        parentSub,\n        this.content\n      )\n  }\n}\n","\n/**\n * @module encoding\n *\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  GCRef,\n  ItemRef,\n  writeID,\n  createID,\n  readID,\n  getState,\n  getStateVector,\n  readDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  Doc, Transaction, AbstractStruct, StructStore, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\nimport * as binary from 'lib0/binary.js'\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Array<AbstractStruct>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder, structs.length - startNewStructs)\n  writeID(encoder, createID(client, clock))\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock, 0)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0, 0)\n  }\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @param {number} numOfStructs\n * @param {ID} nextID\n * @return {Array<GCRef|ItemRef>}\n *\n * @private\n * @function\n */\nconst readStructRefs = (decoder, numOfStructs, nextID) => {\n  /**\n   * @type {Array<GCRef|ItemRef>}\n   */\n  const refs = []\n  for (let i = 0; i < numOfStructs; i++) {\n    const info = decoding.readUint8(decoder)\n    const ref = (binary.BITS5 & info) === 0 ? new GCRef(decoder, nextID, info) : new ItemRef(decoder, nextID, info)\n    nextID = createID(nextID.client, nextID.clock + ref.length)\n    refs.push(ref)\n  }\n  return refs\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder, sm.size)\n  sm.forEach((clock, client) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock)\n  })\n}\n\n/**\n * @param {decoding.Decoder} decoder The decoder object to read data from.\n * @return {Map<number,Array<GCRef|ItemRef>>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = decoder => {\n  /**\n   * @type {Map<number,Array<GCRef|ItemRef>>}\n   */\n  const clientRefs = new Map()\n  const numOfStateUpdates = decoding.readVarUint(decoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder)\n    const nextID = readID(decoder)\n    const refs = readStructRefs(decoder, numberOfStructs, nextID)\n    clientRefs.set(nextID.client, refs)\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nconst resumeStructIntegration = (transaction, store) => {\n  const stack = store.pendingStack\n  const clientsStructRefs = store.pendingClientsStructRefs\n  // iterate over all struct readers until we are done\n  while (stack.length !== 0 || clientsStructRefs.size !== 0) {\n    if (stack.length === 0) {\n      // take any first struct from clientsStructRefs and put it on the stack\n      const [client, structRefs] = clientsStructRefs.entries().next().value\n      stack.push(structRefs.refs[structRefs.i++])\n      if (structRefs.refs.length === structRefs.i) {\n        clientsStructRefs.delete(client)\n      }\n    }\n    const ref = stack[stack.length - 1]\n    const m = ref._missing\n    const client = ref.id.client\n    const localClock = getState(store, client)\n    const offset = ref.id.clock < localClock ? localClock - ref.id.clock : 0\n    if (ref.id.clock + offset !== localClock) {\n      // A previous message from this client is missing\n      // check if there is a pending structRef with a smaller clock and switch them\n      const structRefs = clientsStructRefs.get(client)\n      if (structRefs !== undefined) {\n        const r = structRefs.refs[structRefs.i]\n        if (r.id.clock < ref.id.clock) {\n          // put ref with smaller clock on stack instead and continue\n          structRefs.refs[structRefs.i] = ref\n          stack[stack.length - 1] = r\n          // sort the set because this approach might bring the list out of order\n          structRefs.refs = structRefs.refs.slice(structRefs.i).sort((r1, r2) => r1.id.clock - r2.id.clock)\n          structRefs.i = 0\n          continue\n        }\n      }\n      // wait until missing struct is available\n      return\n    }\n    while (m.length > 0) {\n      const missing = m[m.length - 1]\n      if (getState(store, missing.client) <= missing.clock) {\n        const client = missing.client\n        // get the struct reader that has the missing struct\n        const structRefs = clientsStructRefs.get(client)\n        if (structRefs === undefined) {\n          // This update message causally depends on another update message.\n          return\n        }\n        stack.push(structRefs.refs[structRefs.i++])\n        if (structRefs.i === structRefs.refs.length) {\n          clientsStructRefs.delete(client)\n        }\n        break\n      }\n      ref._missing.pop()\n    }\n    if (m.length === 0) {\n      if (offset < ref.length) {\n        ref.toStruct(transaction, store, offset).integrate(transaction)\n      }\n      stack.pop()\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const tryResumePendingDeleteReaders = (transaction, store) => {\n  const pendingReaders = store.pendingDeleteReaders\n  store.pendingDeleteReaders = []\n  for (let i = 0; i < pendingReaders.length; i++) {\n    readDeleteSet(pendingReaders[i], transaction, store)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * @param {StructStore} store\n * @param {Map<number, Array<GCRef|ItemRef>>} clientsStructsRefs\n *\n * @private\n * @function\n */\nconst mergeReadStructsIntoPendingReads = (store, clientsStructsRefs) => {\n  const pendingClientsStructRefs = store.pendingClientsStructRefs\n  for (const [client, structRefs] of clientsStructsRefs) {\n    const pendingStructRefs = pendingClientsStructRefs.get(client)\n    if (pendingStructRefs === undefined) {\n      pendingClientsStructRefs.set(client, { refs: structRefs, i: 0 })\n    } else {\n      // merge into existing structRefs\n      const merged = pendingStructRefs.i > 0 ? pendingStructRefs.refs.slice(pendingStructRefs.i) : pendingStructRefs.refs\n      for (let i = 0; i < structRefs.length; i++) {\n        merged.push(structRefs[i])\n      }\n      pendingStructRefs.i = 0\n      pendingStructRefs.refs = merged.sort((r1, r2) => r1.id.clock - r2.id.clock)\n    }\n  }\n}\n\n/**\n * Read the next Item in a Decoder and fill this Item with the read data.\n *\n * This is called when data is received from a remote peer.\n *\n * @param {decoding.Decoder} decoder The decoder object to read data from.\n * @param {Transaction} transaction\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const readStructs = (decoder, transaction, store) => {\n  const clientsStructRefs = readClientsStructRefs(decoder)\n  mergeReadStructsIntoPendingReads(store, clientsStructRefs)\n  resumeStructIntegration(transaction, store)\n  tryResumePendingDeleteReaders(transaction, store)\n}\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) =>\n  ydoc.transact(transaction => {\n    readStructs(decoder, transaction, ydoc.store)\n    readDeleteSet(decoder, transaction, ydoc.store)\n  }, transactionOrigin)\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) =>\n  readUpdate(decoding.createDecoder(update), ydoc, transactionOrigin)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {encoding.Encoder} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => {\n  const encoder = encoding.createEncoder()\n  const targetStateVector = encodedTargetStateVector == null ? new Map() : decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {decoding.Decoder} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(decoding.createDecoder(decodedState))\n\n/**\n * Write State Vector to `lib0/encoding.js#Encoder`.\n *\n * @param {encoding.Encoder} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => {\n  encoding.writeVarUint(encoder, doc.store.clients.size)\n  doc.store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    const id = struct.id\n    encoding.writeVarUint(encoder, id.client)\n    encoding.writeVarUint(encoder, id.clock + struct.length)\n  })\n  return encoder\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => {\n  const encoder = encoding.createEncoder()\n  writeDocumentStateVector(encoder, doc)\n  return encoding.toUint8Array(encoder)\n}\n"],"names":["math.floor","map.setIfUndefined","encoding.writeVarUint","decoding.readVarUint","encoding.createEncoder","decoding.createDecoder","encoding.toUint8Array","f.callAll","error.unexpectedCase","encoding.writeUint8","encoding.writeVarString","decoding.readVarString","map.any","set.create","math.min","math.max","Observable","time.getUnixTime","random.uint32","error.methodUnimplemented","error.create","iterator.iteratorFilter","iterator.iteratorMap","encoding.writeVarUint8Array","buffer.copyUint8Array","decoding.readVarUint8Array","maplib.setIfUndefined","binary.BITS5","binary.BIT8","binary.BIT7","binary.BIT6","decoding.readUint8"],"mappings":"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"}